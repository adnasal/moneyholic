name: Moneyholic CI/CD Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main


jobs:
  health-check-job:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          POSTGRES_DB: ${DB_NAME}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Check Python version
        run: python --version
      - name: cache poetry install
        uses: actions/cache@v2
        with:
            path: ~/.local
            key: poetry-1.1.12-0
      - name : install poetryba
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
            path: .venv
            key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: Install requirements
        run: poetry config virtualenvs.create false
      - name: Install requirements2
        run: poetry config experimental.new-installer false
      - name: Install requirements3
        run: poetry install --no-interaction -v
      - name: Run Migrations
        run: python manage.py migrate
      - name: Run Test
        run: python manage.py test

